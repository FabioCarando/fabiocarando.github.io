import random
import mido
from mido import MidiFile, MidiTrack, Message

# Frequenze delle note in MIDI (C4 = 60, C5 = 72, ecc.)
NOTES = {
    'C': 60, 'C#': 61, 'D': 62, 'D#': 63, 'E': 64,
    'F': 65, 'F#': 66, 'G': 67, 'G#': 68, 'A': 69,
    'A#': 70, 'B': 71
}

# Definire una scala maggiore (esempio: C maggiore)
MAJOR_SCALE = ['C', 'D', 'E', 'F', 'G', 'A', 'B']
MINOR_SCALE = ['C', 'D', 'D#', 'F', 'G', 'G#', 'A#']

# Durate delle note in ticks (MIDI standard)
DURATIONS = [240, 480, 720, 960]  # Ticks: 1/4, 1/2, 3/4, intero

# Funzione per generare un accordo (con 3 note)
def generate_chord(root_note, scale, duration):
    root = NOTES[root_note]
    chord_notes = [root, NOTES[scale[(i+1) % len(scale)]] for i in range(3)]  # C major: C, E, G
    chord = [(note, duration) for note in chord_notes]
    return chord

# Funzione per generare una melodia
def generate_melody(scale, length=16):
    melody = []
    for _ in range(length):
        # 20% probabilit√† di generare un accordo
        if random.random() < 0.2:  
            chord_root = random.choice(scale)
            chord = generate_chord(chord_root, scale, random.choice(DURATIONS))
            melody.extend(chord)  # Aggiungi l'accordo alla melodia
        else:
            note = random.choice(scale)
            melody.append((NOTES[note], random.choice(DURATIONS)))
    return melody

# Funzione per creare un file MIDI con una melodia
def create_midi(melody, filename="melody.mid"):
    mid = MidiFile()
    track = MidiTrack()
    mid.tracks.append(track)

    track.append(Message('program_change', program=12))  # Strumento piano (general MIDI)

    for note, duration in melody:
        # Note ON
        track.append(Message('note_on', note=note, velocity=64, time=0))
        # Note OFF
        track.append(Message('note_off', note=note, velocity=64, time=duration))

    # Salva il file MIDI
    mid.save(filename)

# Genera una melodia migliorata usando la scala maggiore
melody = generate_melody(MAJOR_SCALE, length=16)

# Crea un file MIDI con la melodia
create_midi(melody, filename="improved_melody.mid")

print("Melodia migliorata e salvata come 'improved_melody.mid'.")
